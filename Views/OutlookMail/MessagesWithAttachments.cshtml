@model List<Pelism.MSGraph.Models.MailItem>
@{
    Script.Require("jQuery").AtFoot();
    Script.Require("jQueryUI_Dialog").AtFoot();
    Script.Require("Knockout").AtFoot();
    Style.Require("FontAwesome");

    Layout.Title = T("Outlook Mail");
}
@{
    ViewBag.Title = "MessagesWithAttachments";
}

<h2>MessagesWithAttachments</h2>
<div data-bind="foreach: mail">
    <div style="padding: 10px 0;border-bottom: 2px gray solid">
        <div data-bind="click: $parent.load, attr: { 'id':Id }" style="float: left; width: 95%;cursor: pointer">
            <div data-bind="text: From" style="font-weight: bold"></div>
            <div data-bind="text: Subject" style="font-weight: bold"></div>
            <div data-bind="text: Preview"></div>
            <div class="attach">
                <div
            </div>
        </div>
        <div style="float: right; width: 5%; cursor: pointer">
            <i class="fa fa-times" aria-hidden="true"></i>
        </div>
        <div style="clear:both"></div>
    </div>
</div>

@using (Script.Foot())
{
    <script type="text/javascript">
        //<![CDATA[
        $(function() {
            function outlookMailViewModel() {
                var self = this;

                self.mail = ko.observableArray(@Html.Raw(Json.Encode(Model)));

                self.load = function(mail) {
                    if (mail.Id !== "") {
                        var el = $("#" + mail.Id).find(".attach");
                        if (el.children().length === 0) {
                            $.getJSON("@Url.Action("GetMessageAttachments")",
                                { messageId: mail.MessageId },
                                function(data) {
                                    el.append("<div>" + data[0].Name + "</div>");
                                });
                        } else {
                            // hide unhide children
                            el.hide();
                        }
                    }
                };

                self.move = function(attachment) {
                    
                }
            }

            ko.applyBindings(new outlookMailViewModel());
        })
        //]]>
    </script>
}
